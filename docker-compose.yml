version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: crm-postgres
    environment:
      POSTGRES_DB: crm_db
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - crm-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: crm-redis
    ports:
      - "6379:6379"
    networks:
      - crm-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: crm-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - crm-net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Discovery Server
  discovery-server:
    build:
      context: ./backend/discovery-server
    ports:
      - "8761:8761"
    networks:
      - crm-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: ./backend/auth-service
    ports:
      - "8085:8085"
    depends_on:
      discovery-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: auth-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/crm_db
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-server:8761/eureka/
    networks:
      - crm-net

  # Customer Service
  customer-service:
    build:
      context: ./backend/customer-service
    ports:
      - "8081:8081"
    depends_on:
      discovery-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: customer-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/crm_db
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-server:8761/eureka/
    networks:
      - crm-net

  # Sales Service
  sales-service:
    build:
      context: ./backend/sales-service
    ports:
      - "8082:8082"
    depends_on:
      discovery-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: sales-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/crm_db
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-server:8761/eureka/
    networks:
      - crm-net

  # Task Service
  task-service:
    build:
      context: ./backend/task-service
    ports:
      - "8083:8083"
    depends_on:
      discovery-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: task-service
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/crm_db
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-server:8761/eureka/
    networks:
      - crm-net

  # Notification Service
  notification-service:
    build:
      context: ./backend/notification-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/crm_db
      - SPRING_DATASOURCE_USERNAME=crm_user
      - SPRING_DATASOURCE_PASSWORD=crm_password
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - MAIL_USERNAME=your-email@gmail.com
      - MAIL_PASSWORD=your-app-password
    depends_on:
      - postgres
      - rabbitmq
      - discovery-server
    networks:
      - crm-net

  # API Gateway
  crm-gateway:
    build:
      context: ./backend/crm-gateway
    ports:
      - "8080:8080"
    depends_on:
      discovery-server:
        condition: service_healthy
      auth-service:
        condition: service_started
      customer-service:
        condition: service_started
      sales-service:
        condition: service_started
      task-service:
        condition: service_started
      notification-service:
        condition: service_started
    environment:
      SPRING_APPLICATION_NAME: crm-gateway
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://discovery-server:8761/eureka/
    networks:
      - crm-net

volumes:
  postgres_data:

networks:
  crm-net:
    driver: bridge 